@model VirtualHealthProject.Models.PatientViewModel

@{
    ViewBag.Title = "Create Patient Folder";
    Layout = "_WardAdminLayout";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/styles.css">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
 
<style> 

    /* General Styles */
    body {
        font-family: Arial, sans-serif;
    }

        .form-container {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            padding: 20px;
            margin: 0 auto;
            max-width: 800px;
        }

        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }

        input[type="text"],
        input[type="date"],
        input[type="time"],
        textarea {
            width: 100%;
            padding: 10px;
            margin-bottom: 15px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }

        textarea {
            resize: vertical;
        }
    /* Dropdown button */
    .btn-primary {
        background-color: #007bff;
        border: none;
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }

    /* Dropdown menu */
    .dropdown-menu {
        max-height: 300px; /* Limit height for scrollable dropdown */
        overflow-y: auto; /* Enable scrolling */
    }

    /* Checkbox styling */
    .form-check {
        padding: 5px 15px;
    }

    .form-check-input {
        margin-right: 10px; /* Space between checkbox and label */
    }

    /* Adjust label styles */
    .form-check-label {
        cursor: pointer; /* Change cursor on hover */
    }

    /* Button styles */
    .btn-success {
        background-color: #28a745;
        border: none;
    }

    .btn-success:hover {
        background-color: #218838;
    
    }

    .validation-error {
            color: red;
    }
</style>
</head>
<body>
   <div class="form-container">
    @using (Html.BeginForm("Create", "PatientFolder", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div>
            <h3>Patient Information</h3>
            <div class="form-group">
                @Html.LabelFor(m => m.FirstName)
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "validation-error" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.LastName)
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "validation-error" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.DateOfBirth)
                @Html.TextBoxFor(m => m.DateOfBirth, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "validation-error" })
            </div>
            <div class="form-group">
                 @Html.LabelFor(m => m.Gender)
                 @Html.DropDownListFor(m => m.Gender,
                             new SelectList(new[]
                             {
                new { Value = "Male", Text = "Male" },
                new { Value = "Female", Text = "Female" },
                new { Value = "Other", Text = "Other" }
                }, "Value", "Text"),
                             "Select Gender",
                             new { @class = "form-control" })
                </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ContactNumber)
                    @Html.TextBoxFor(m => m.ContactNumber, new { @placeholder = "XXX-XXX-XXXX",  @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ContactNumber, "", new { @class = "validation-error" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Email)
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "validation-error" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Address)
                @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Address, "", new { @class = "validation-error" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.PostalCode)
                @Html.TextBoxFor(m => m.PostalCode, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.PostalCode, "", new { @class = "validation-error" })
            </div>
        </div>

        <div>
            <h3>Medical Details</h3>
            <div class="form-group">
                @Html.LabelFor(m => m.PrimaryConcern)
                @Html.TextAreaFor(m => m.PrimaryConcern, new { @class = "form-control", rows = 4 })
                    @Html.ValidationMessageFor(m => m.PrimaryConcern, "", new { @class = "validation-error" })
            </div>
        </div>

            <div class="form-group">
                <h4>Current Medications</h4>
                @Html.DropDownListFor(m => m.SelectedCurrentMedication,
                         new SelectList(Model.CurrentMedicationOptions, "Value", "Text", Model.SelectedCurrentMedication),
                         "Select Current Medication",
                         new { @class = "form-control", id = "selectedMedications" })
            </div>

            <div class="form-group">
                <h4>Medical History</h4>
                @Html.DropDownListFor(m => m.SelectedMedicalHistory,
                         new SelectList(Model.MedicalHistoryOptions, "Value", "Text", Model.SelectedMedicalHistory),
                         "Select Medical History",
                         new { @class = "form-control", id = "selectedMedicalHistory" })
            </div>

            <div class="form-group">
                <h4>Chronic Illness</h4>
                @Html.DropDownListFor(m => m.SelectedChronicIllness,
                         new SelectList(Model.ChronicIllnessOptions, "Value", "Text", Model.SelectedChronicIllness),
                         "Select Chronic Illness",
                         new { @class = "form-control", id = "selectedChronicIllness" })
            </div>

        @*<div class="form-group">
            <h4>Allergies</h4>
            <div class="dropdown">
                <button class="btn btn-primary dropdown-toggle" type="button" id="allergiesDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Select Allergies
                </button>
                <div class="dropdown-menu" aria-labelledby="allergiesDropdown">
                    @foreach (var item in Model.AllergiesOptions)
                    {
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input"
                                   name="SelectedAllergies"
                                   value="@item.Value"
                                   id="allergy_@item.Value"
                            @(Model.SelectedAllergies.Contains(item.Value) ? "checked" : "") />
                            <label class="form-check-label" for="allergy_@item.Value">@item.Text</label>
                        </div>
                    }
                </div>
            </div>
        </div>*@

        <button type="submit" class="btn btn-success">Create Folder</button>
    }
    </body>
    </html>
    <script>
        $(document).ready(function () {
            $('.dropdown-menu input[type="checkbox"]').on('change', function () {
                var $dropdownButton = $(this).closest('.dropdown-menu').prev('.dropdown-toggle');
                var selectedOptions = [];

                // Collect all checked options
                $(this).closest('.dropdown-menu').find('input[type="checkbox"]:checked').each(function () {
                    selectedOptions.push($(this).next('label').text());
                });

                $dropdownButton.text(selectedOptions.length > 0 ? selectedOptions.join(', ') : "Select Options");
            });
        });
    </script>

