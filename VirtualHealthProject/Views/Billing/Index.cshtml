@model IEnumerable<VirtualHealthProject.Models.Billing>

@{
    ViewData["Title"] = "Index";
    Layout = "_WardAdminLayout";
}

<div class="container-fluid mt-4 position-relative">
    <!-- Page Heading and Create Button -->
    <div class="d-flex justify-content-center mb-4 position-relative">
        <h1 class="mb-4 text-center">Patient Billing</h1>
    </div>

    <div class="d-flex justify-content-between mb-4">
        <p>
            <a class="btn btn-primary" asp-action="Create">Patient Billing Information</a>
        </p>
        <div class="search-bar">
            <input type="text" id="searchInput" class="form-control" placeholder="Search..." onkeyup="searcBilling()">

        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-hover w-100">
            <thead class="thead-light">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.BillId)</th>
                    <th>@Html.DisplayNameFor(model => model.ScheduledMedication)</th>
                    <th>@Html.DisplayNameFor(model => model.FirstName)</th>
                    <th>@Html.DisplayNameFor(model => model.LastName)</th>
                    <th>@Html.DisplayNameFor(model => model.AdmissionDate)</th>
                    <th>@Html.DisplayNameFor(model => model.DischargeDate)</th>
                    <th>@Html.DisplayNameFor(model => model.BedCharge)</th>

                    <th>@Html.DisplayNameFor(model => model.MedicationCharge)</th>
                    <th>@Html.DisplayNameFor(model => model.ServiceCharge)</th>
                    <th>@Html.DisplayNameFor(model => model.TotalAmount)</th>
                    <th>@Html.DisplayNameFor(model => model.AmountPaid)</th>
                    <th>@Html.DisplayNameFor(model => model.PaymentStatus)</th>
                    <th>@Html.DisplayNameFor(model => model.PaymentDate)</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="nurseDispenseTableBody">
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.BillId)</td>
                        <td>@Html.DisplayFor(modelItem => item.ScheduledMedication)</td>
                        <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                        <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                        <td>@Html.DisplayFor(modelItem => item.AdmissionDate)</td>
                        <td>@Html.DisplayFor(modelItem => item.DischargeDate)</td>
                        <td>@Html.DisplayFor(modelItem => item.BedCharge)</td>

                        <td>@Html.DisplayFor(modelItem => item.MedicationCharge)</td>
                        <td>@Html.DisplayFor(modelItem => item.ServiceCharge)</td>
                        <td>@Html.DisplayFor(modelItem => item.TotalAmount)</td>
                        <td>@Html.DisplayFor(modelItem => item.AmountPaid)</td>
                        <td>@Html.DisplayFor(modelItem => item.PaymentStatus)</td>
                        <td>@Html.DisplayFor(modelItem => item.PaymentDate)</td>
                        <td>
                            <a class="btn btn-sm btn-info" asp-action="Edit" asp-route-id="@item.BillId">Edit</a>
                            <a class="btn btn-sm btn-outline-success" asp-action="Details" asp-route-id="@item.BillId">Details</a>
                            <a class="btn btn-sm btn-danger" asp-action="Delete" asp-route-id="@item.BillId">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script>
    function searchBilling() {
        const input = document.getElementById('searchInput');
        const filter = input.value.toLowerCase();
        const table = document.getElementById('billingTableBody');
        const rows = table.getElementsByTagName('tr');

        for (let i = 0; i < rows.length; i++) {
            const cells = rows[i].getElementsByTagName('td');
            let rowContainsSearchTerm = false;

            for (let j = 0; j < cells.length - 1; j++) { // -1 to skip the actions column
                const cell = cells[j];
                if (cell) {
                    const txtValue = cell.textContent || cell.innerText;
                    if (txtValue.toLowerCase().indexOf(filter) > -1) {
                        rowContainsSearchTerm = true;
                        break; // Exit the inner loop if a match is found
                    }
                }
            }

            rows[i].style.display = rowContainsSearchTerm ? "" : "none";
        }
    }
</script>